test2 <- 0.5*((A-w2%*%h)^2)
if(sum(test2) < tempsum){
tempsum <- sum(test2)
seednum <- i
return(c(tempsum, i))
}
}
}
als(m,n,k,maxx)
als <- function(m,n,k,maxx){
if(k > m | k > n){
stop("non-valid dimensions")
}
if(k < 0 |m < 0|n < 0|maxx<0){
stop("non-valid dimensions")
}
A = matrix(runif(m*n, 0, maxx), nrow = m)
w = matrix(runif(m*k,0,1), nrow = m)
testy = matrix(rep(maxx + 1, m*n), nrow = m)
tempsum = sum(testy)
seednum = 501
for(i in 1:500){
set.seed(i)
tempw <- t(w)%*%w
temprhs <- t(w)%*%A
h = solve(tempw)%*%temprhs
for(i in 1:dim(h)[1]){
for(j in 1:dim(h)[2]){
if(h[i,j] < 0){
h[i,j] = 0
}
}
}
templhs <- h%*%t(h)
temprhs2 <- h%*%t(A)
w2t <- solve(templhs)%*%temprhs2
w2 <- t(w2t)
for(i in 1:dim(w2)[1]){
for(j in 1:dim(w2)[2]){
if(w2[i,j] < 0){
w2[i,j] = 0
}
}
}
test2 <- 0.5*((A-w2%*%h)^2)
if(sum(test2) < tempsum){
tempsum <- sum(test2)
seednum <- i
return(c(tempsum, seednum))
}
}
}
als(5,4,3,6)
tempsum = sum(testy)
m
n
k
maxx
for(i in 1:500){
set.seed(i)
w = matrix(runif(m*k,0,1), nrow = m)
tempw <- t(w)%*%w
temprhs <- t(w)%*%A
h = solve(tempw)%*%temprhs
for(i in 1:dim(h)[1]){
for(j in 1:dim(h)[2]){
if(h[i,j] < 0){
h[i,j] = 0
}
}
}
templhs <- h%*%t(h)
temprhs2 <- h%*%t(A)
w2t <- solve(templhs)%*%temprhs2
w2 <- t(w2t)
for(i in 1:dim(w2)[1]){
for(j in 1:dim(w2)[2]){
if(w2[i,j] < 0){
w2[i,j] = 0
}
}
}
test2 <- 0.5*((A-w2%*%h)^2)
if(sum(test2) < tempsum){
tempsum <- sum(test2)
seednum <- i
return(c(tempsum, seednum))
}
for(i in 1:500){
set.seed(i)
w = matrix(runif(m*k,0,1), nrow = m)
tempw <- t(w)%*%w
temprhs <- t(w)%*%A
h = solve(tempw)%*%temprhs
for(i in 1:dim(h)[1]){
for(j in 1:dim(h)[2]){
if(h[i,j] < 0){
h[i,j] = 0
}
}
}
templhs <- h%*%t(h)
temprhs2 <- h%*%t(A)
w2t <- solve(templhs)%*%temprhs2
w2 <- t(w2t)
for(i in 1:dim(w2)[1]){
for(j in 1:dim(w2)[2]){
if(w2[i,j] < 0){
w2[i,j] = 0
}
}
}
test2 <- 0.5*((A-w2%*%h)^2)
if(sum(test2) < tempsum){
tempsum <- sum(test2)
seednum <- i
return(c(tempsum, seednum))
}
}
set.seed(1)
w
}
A = matrix(runif(m*n, 0, maxx), nrow = m)
testy = matrix(rep(maxx + 1, m*n), nrow = m)
tempsum = sum(testy)
seednum = 501
for(i in 1:500){
set.seed(i)
w = matrix(runif(m*k,0,1), nrow = m)
tempw <- t(w)%*%w
temprhs <- t(w)%*%A
h = solve(tempw)%*%temprhs
for(i in 1:dim(h)[1]){
for(j in 1:dim(h)[2]){
if(h[i,j] < 0){
h[i,j] = 0
}
}
}
templhs <- h%*%t(h)
temprhs2 <- h%*%t(A)
w2t <- solve(templhs)%*%temprhs2
w2 <- t(w2t)
for(i in 1:dim(w2)[1]){
for(j in 1:dim(w2)[2]){
if(w2[i,j] < 0){
w2[i,j] = 0
}
}
}
test2 <- 0.5*((A-w2%*%h)^2)
if(sum(test2) < tempsum){
tempsum <- sum(test2)
seednum <- i
return(c(tempsum, seednum))
}
}
testy = matrix(rep(maxx + 1, m*n), nrow = m)
testy
A
tempsum = sum(testy)
seednum = 501
w = matrix(runif(m*k,0,1), nrow = m)
tempw <- t(w)%*%w
temprhs <- t(w)%*%A
h = solve(tempw)%*%temprhs
h
w
tempw
temprhs
h = solve(tempw)%*%temprhs
h
w
h
templhs <- h%*%t(h)
temprhs2 <- h%*%t(A)
templhs
m=4
n=5
k=3
maxx=6
A = matrix(runif(m*n, 0, maxx), nrow = m)
testy = matrix(rep(maxx + 1, m*n), nrow = m)
tempsum = sum(testy)
seednum = 501
set.seed(1)
w = matrix(runif(m*k,0,1), nrow = m)
tempw <- t(w)%*%w
temprhs <- t(w)%*%A
det(tempw)
h = solve(tempw)%*%temprhs
w
set.seed(2)
w = matrix(runif(m*k,0,1), nrow = m)
w
set.seed(1)
w = matrix(runif(m*k,0,1), nrow = m)
w
for(i in 1:10){
set.seed(i)
w = matrix(runif(m*k,0,1), nrow = m)
tempw <- t(w)%*%w
print(det(tempw))
}
for(i in 1:100){
set.seed(i)
w = matrix(runif(m*k,0,1), nrow = m)
tempw <- t(w)%*%w
print(det(tempw))
}
als <- function(m,n,k,maxx){
if(k > m | k > n){
stop("non-valid dimensions")
}
if(k < 0 |m < 0|n < 0|maxx<0){
stop("non-valid dimensions")
}
testy = matrix(rep(maxx + 1, m*n), nrow = m)
tempsum = sum(testy)
seednum = 501
for(k in 1:500){
set.seed(k)
w = matrix(runif(m*k,0,1), nrow = m)
tempw <- t(w)%*%w
temprhs <- t(w)%*%A
h = solve(tempw)%*%temprhs
for(i in 1:dim(h)[1]){
for(j in 1:dim(h)[2]){
if(h[i,j] < 0){
h[i,j] = 0
}
}
}
templhs <- h%*%t(h)
temprhs2 <- h%*%t(A)
w2t <- solve(templhs)%*%temprhs2
w2 <- t(w2t)
for(i in 1:dim(w2)[1]){
for(j in 1:dim(w2)[2]){
if(w2[i,j] < 0){
w2[i,j] = 0
}
}
}
test2 <- 0.5*((A-w2%*%h)^2)
if(sum(test2) < tempsum){
tempsum <- sum(test2)
seednum <- k
return(c(tempsum, seednum))
}
}
}
als(5,4,3,6)
temprhs <- t(w)%*%A
als(4,5,3,6)
w
set.seed(1)
w
tempw <- t(w)%*%w
temprhs <- t(w)%*%A
h = solve(tempw)%*%temprhs
h
for(i in 1:dim(h)[1]){
for(j in 1:dim(h)[2]){
if(h[i,j] < 0){
h[i,j] = 0
}
}
}
h
templhs <- h%*%t(h)
temprhs2 <- h%*%t(A)
w2t <- solve(templhs)%*%temprhs2
w2 <- t(w2t)
det(templhs)
A = matrix(c(1,2,3,4), nrow = 2)
B = matrix(c(2,3,4,5), nrow = 2)
A
B
A/B
A*B
A = matrix(c(2,3,4,5,6,7,8,9,10,11,12,13), nrow = 3)
A
dim(A)
dim(A)[1]*dim(A)[2]
testy = matrix(rep(max(A), dim(A)[1]*dim(A)[2]), nrow = dim(A)[1])
tempsum = sum(testy)
seednum = 501
testy
sum(testy)
k = 2
W = matrix(runif(dim(A)[1]*k,0,1), nrow = dim(A)[1])
set.seed(1)
W = matrix(runif(dim(A)[1]*k,0,1), nrow = dim(A)[1])
w
dim(A)[1]
dim(A)[1])
dim(A)[1]
k
dim(A)[1]*k
runif(dim(A)[1]*k,0,1)
w
w = matrix(runif(dim(A)[1]*k,0,1), nrow = dim(A)[1])
w
h = matrix(runif(k*dim(A)[2],0,1), nrow = k)
h
t(w)%*%A
h*(t(w)%*%A)
t(w)%*%w%*%h
t(w)%*%w%*%h + .000000001
(h*(t(w)%*%A))/(t(w)%*%w%*%h + .000000001)
w1 = (w*(A%*%t(h)))/(w%*%h%*%t(h) + .000000001)
w1
test2 <- 0.5*((A-w1%*%h1)^2)
h1 = (h*(t(w)%*%A))/(t(w)%*%w%*%h + .000000001)
w1 = (w*(A%*%t(h)))/(w%*%h%*%t(h) + .000000001)
h1
w1
test2 <- 0.5*((A-w1%*%h1)^2)
test2
w1%*%h1
A
if(sum(test2) < tempsum){
tempsum <- sum(test2)
seednum <- i
return(c(tempsum, seednum))
}
runFunction <- function(){
res <- fromJSON('http://api.sfpark.org/sfpark/rest/availabilityservice?lat=37.792275&long=-122.397089&radius=1&uom=mile&response=json')
tes <-  res$AVL
DF<-subset(tes, select=c("OSPID", "OCC"))
fileName <- paste("myData",Sys.time(),".csv", sep="")
write.csv(DF, file = fileName)
}
repeat {
startTime <- Sys.time()
runFunction()
sleepTime <- startTime + 1*6 - Sys.time()
if (sleepTime > 0)
Sys.sleep(sleepTime)
}
library(jsonlite)
runFunction <- function(){
res <- fromJSON('http://api.sfpark.org/sfpark/rest/availabilityservice?lat=37.792275&long=-122.397089&radius=1&uom=mile&response=json')
tes <-  res$AVL
DF<-subset(tes, select=c("OSPID", "OCC"))
fileName <- paste("myData",Sys.time(),".csv", sep="")
write.csv(DF, file = fileName)
}
repeat {
startTime <- Sys.time()
runFunction()
sleepTime <- startTime + 1*6 - Sys.time()
if (sleepTime > 0)
Sys.sleep(sleepTime)
}
library(jsonlite)
runFunction <- function(){
res <- fromJSON('http://api.sfpark.org/sfpark/rest/availabilityservice?lat=37.792275&long=-122.397089&radius=1&uom=mile&response=json')
tes <-  res$AVL
DF<-subset(tes, select=c("OSPID", "OCC"))
fileName <- paste("myData",Sys.time(),".csv", sep="")
write.csv(DF, file = fileName)
}
repeat {
startTime <- Sys.time()
runFunction()
sleepTime <- startTime + 1*6 - Sys.time()
if (sleepTime > 0)
Sys.sleep(sleepTime)
}
DF
res <- fromJSON('http://api.sfpark.org/sfpark/rest/availabilityservice?lat=37.792275&long=-122.397089&radius=1&uom=mile&response=json')
tes <-  res$AVL
DF<-subset(tes, select=c("OSPID", "OCC"))
DF
tes
shiny::runApp('C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/rforest')
?tabPanel
runApp('C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/rforest')
?textInput
runApp('C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/rforest')
runApp('C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/rforest')
runApp('C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/rforest')
?fluidRow
shiny::runApp('C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/rforest')
shiny::runApp('C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/rforest')
?pow
seq(1, 5, 0.1)
mus <- seq(1, 5, 0.1)
ys <- c()
pnorm(1.645)
x = 1
pnorn(2.645 - x)
pnorm(2.645 - x)
for(i in mus){
ys[i] <- 1-pnorm(2.645-i)
}
ys
mus
for(i in mus){print i}
for(i in mus){print(i)}
mus <- seq(1, 5, 0.1)
ys <- c()
for(i in length(mus)){
ys[i] <- 1-pnorm(2.645-mus[i])
}
ys
mus[1]
pnorm(2.645 - mus[1])
mus <- seq(1, 5, 0.1)
ys <- c()
for(i in 1:length(mus)){
ys[i] <- 1-pnorm(2.645-mus[i])
}
ys
mus <- seq(1, 5, 0.1)
ys1 <- c()
ys2 <- c()
for(i in 1:length(mus)){
ys1[i] <- 1-pnorm(2.645-mus[i])
ys2[i] <- 1-pnorm(2.9 - mus[i])
}
plot(mus,ys1)
plot(mus,ys1, lty = 2)
plot(mus,ys1, type = "l")
plot(mus,ys1, type = "l", col = "red")
lines(mus, ys2, type = "l", col = "blue")
load("C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/rforest/data/suprema.Rda")
shiny::runApp('C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/rforest')
load("C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/rforest/data/suprema.Rda")
combino <- readRDS("data/data.Rda")
runApp('C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/rforest')
library(arules)
if(!require(arules)) install.packages("arules")
library(arules)
install.packages("arules")
install.packages("installr"); library(installr) # install+load installr
updateR()
updateR()
if(!require(arules)) install.packages("arules")
library(arules)
shiny::runApp('C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/rforest')
install.packages("caret")
?curve
erf <- function(x) 2 * pnorm(x * sqrt(2)) - 1
curve(0.5*erf(0.08-x) - 0.5*erf(2.92-x) + 1, from = -2, to = 5)
function(x) 2 * pnorm(x * sqrt(2)) - 1
str(curve(0.5*erf(0.08-x) - 0.5*erf(2.92-x) + 1, from = -2, to = 5))
str(curve(0.5*erf(0.08-x) - 0.5*erf(2.92-x) + 1, from = -2, to = 5))$x
str(curve(0.5*erf(0.08-x) - 0.5*erf(2.92-x) + 1, from = -2, to = 5))$y
curve(0.5*erf(0.08-x) - 0.5*erf(2.92-x) + 1, from = -2, to = 5)$x
curve(0.5*erf(0.08-x) - 0.5*erf(2.92-x) + 1, from = -2, to = 5)$y
shiny::runApp('C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/pdfReport/pdfReport')
library(rmarkdown)
install.packages(rmarkdown)
install.packages("rmarkdown")
runApp('C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/pdfReport/pdfReport')
runApp('C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/pdfReport/pdfReport')
?file.path
runApp('C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/rforest')
?tempdir
?render
?globalenv
install.packages("knitr")
install.packages("knitr")
library(knitr)
shiny::runApp('C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/pdfReport/pdfReport')
runApp('C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/pdfReport/pdfReport')
library(ggplot2)
library(rmarkdown)
runApp('C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/pdfReport/pdfReport')
data(cars)
runApp('C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/pdfReport/pdfReport')
ggplot(params$df, aes_string(x=names(params$df)[1], y=names(params$df)[2])) +
geom_point()
params$choice
?aes_string
runApp('C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/pdfReport/pdfReport')
runApp('C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/pdfReport/pdfReport')
runApp('C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/rforest')
shiny::runApp('C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/rforest')
runApp('C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/rforest')
?verbatimTextOutput
?downloadButton
?downloadHandler
?aes_string
shiny::runApp('C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/rforest')
runApp('C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/rforest')
runApp('C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/rforest')
runApp('C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/rforest')
shiny::runApp('C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/rforest')
runApp('C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/rforest')
runApp('C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/rforest')
runApp('C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/rforest')
runApp('C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/rforest')
runApp('C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/rforest')
runApp('C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/rforest')
setwd("C:/Users/Yicheng/Desktop/fuyue data/CSV/OSCC")
setwd("C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/rforest")
getwd()
setwd("C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/rforest/testFuncs")
library(knitr)
library(rmarkdown)
rda1 <-readRDS("C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/rforest/data/data.Rda")
dt <- read.csv("C:/Users/Yicheng/Desktop/fuyue data/CSV/OSCC/00872870.csv")
params <- list( rda = rda1,df = dt)
render("C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/rforest/testFuncs/report-test1.Rmd", output_file = "some.pdf",
params = params)
render("C:/Users/Yicheng/Desktop/chenresearch/exfoliative cell data 20161230/MotionDetection/rforest/testFuncs/report-test1.Rmd",
output_file = "some.pdf",
params = list( rda = rda1,df = dt))
